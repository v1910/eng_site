{"ast":null,"code":"import _classCallCheck from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import ReactDOM from'react-dom';import{Global}from\"Global.js\";import{ShowCurrentTest}from\"ShowCurrentTest.js\";//import {ShowTest} from \"ShowTest.js\";\nvar global=Global();//Tests Menu \n//export function ListTestsWrapper(props) {\nexport var ListTestsWrapper=/*#__PURE__*/function(_React$Component){_inherits(ListTestsWrapper,_React$Component);var _super=_createSuper(ListTestsWrapper);function ListTestsWrapper(props){var _this;_classCallCheck(this,ListTestsWrapper);var arr_state_test=Array(global.count_questions_test);for(var i=0;i<global.count_questions_test;i++){arr_state_test[i]=true;}arr_state_test[0]=false;_this=_super.call(this,props);//    this.handleChange = this.handleChange.bind(this);\n_this.state={state_test:arr_state_test,state_edit:false};//arr_state_test\nreturn _this;}_createClass(ListTestsWrapper,[{key:\"showTest\",value:function showTest(numberTest){global.count_correct_answer=Array(global.count_questions_test).fill(0);// count of correct answers for every question\nglobal.count_time_question=Array(global.count_questions_test).fill('00:00');// all time for the current question\nglobal.count_time_test=Array(global.count_questions_test).fill('00:00');// all time for the current test\nglobal.selected_answer=-1;// number of the selected answer in the current question\nglobal.correct_answer=-1;// number of the correct answer in the current question  \nglobal.current_question=0;// number of current question ( 0  -  first)\n//    console.log('showTest:  global.count_time_test=',global.count_time_test);    \n//console.log('numberTest=',numberTest);\ndocument.getElementById('header_menu_tests').style.textDecoration=\"underline\";document.getElementById('words_wrapper').style={visibility:'hide'};//console.log('numberTest=',numberTest);\nglobal.currentTest=numberTest;// current test\nfunction ShowTestWork(){return/*#__PURE__*/React.createElement(ShowCurrentTest,null);}//---end of ShowTestWork\nReactDOM.render(/*#__PURE__*/React.createElement(ShowTestWork,null),document.getElementById('tests_wrapper'));}//----end of  showTest(numberTest) {\n},{key:\"noVisibilityTests\",value:function noVisibilityTests(e){document.getElementById('list_tests_wrapper').style.visibility='hidden';//    e.target.style.background = 'red';\n}},{key:\"render\",value:function render(){//console.log('111 render this.state.state_test=',this.state.state_test);    \n//console.log('111 render global.count_questions_test=',global.count_questions_test) \n//console.log('111 render global.currentTest=',global.currentTest)\n//    if(this.state.state_edit){\n//      this.showTest(global.currentTest);\n//    }\nvar work1,arr=[];var k;for(var i=1;i<=global.tests.length;i++){work1=\"TEST\"+i;k=i-1;arr[i]=/*#__PURE__*/React.createElement(\"div\",{key:work1,id:work1,className:\"menu_test\",fontSize:\"11px\",onClick:this.showTest.bind(this,k)},work1);}return/*#__PURE__*/React.createElement(\"div\",{id:\"list_tests_wrapper\",onMouseLeave:this.noVisibilityTests},\" \",arr,\" \");}}]);return ListTestsWrapper;}(React.Component);","map":{"version":3,"sources":["/home/vik/Public/tests/src/node_modules/ListTestsWrapper.js"],"names":["React","ReactDOM","Global","ShowCurrentTest","global","ListTestsWrapper","props","arr_state_test","Array","count_questions_test","i","state","state_test","state_edit","numberTest","count_correct_answer","fill","count_time_question","count_time_test","selected_answer","correct_answer","current_question","document","getElementById","style","textDecoration","visibility","currentTest","ShowTestWork","render","e","work1","arr","k","tests","length","showTest","bind","noVisibilityTests","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {Global} from \"Global.js\";\r\n\r\nimport {ShowCurrentTest} from \"ShowCurrentTest.js\";\r\n\r\n//import {ShowTest} from \"ShowTest.js\";\r\n\r\nlet global = Global();\r\n\r\n//Tests Menu \r\n//export function ListTestsWrapper(props) {\r\nexport class ListTestsWrapper extends React.Component {\r\n  constructor(props) {\r\n    let  arr_state_test = Array(global.count_questions_test);\r\n    for(let i=0; i<global.count_questions_test; i++) {arr_state_test[i] = true;}\r\n    arr_state_test[0] = false;\r\n    super(props);\r\n//    this.handleChange = this.handleChange.bind(this);\r\n    this.state = (\r\n      {state_test: arr_state_test,\r\n       state_edit: false\r\n      }\r\n    ); //arr_state_test\r\n  }\r\n\r\n  showTest(numberTest) {\r\n  \r\n    global.count_correct_answer = Array(global.count_questions_test).fill(0);  // count of correct answers for every question\r\n    \r\n    global.count_time_question = Array(global.count_questions_test).fill('00:00');  // all time for the current question\r\n\r\n    global.count_time_test = Array(global.count_questions_test).fill('00:00'); // all time for the current test\r\n\r\n    global.selected_answer = -1;  // number of the selected answer in the current question\r\n\r\n    global.correct_answer = -1;  // number of the correct answer in the current question  \r\n    \r\n    global.current_question = 0;  // number of current question ( 0  -  first)\r\n\r\n//    console.log('showTest:  global.count_time_test=',global.count_time_test);    \r\n//console.log('numberTest=',numberTest);\r\n\r\n    document.getElementById('header_menu_tests').style.textDecoration = \"underline\";\r\n\r\n    document.getElementById('words_wrapper').style = {visibility: 'hide'};\r\n\r\n//console.log('numberTest=',numberTest);\r\n    global.currentTest = numberTest; // current test\r\n\r\n    function ShowTestWork() {\r\n        return <ShowCurrentTest />;\r\n    }//---end of ShowTestWork\r\n   \r\n   ReactDOM.render(<ShowTestWork />, document.getElementById('tests_wrapper'));\r\n\r\n  } //----end of  showTest(numberTest) {\r\n\r\n  noVisibilityTests(e) {\r\n      document.getElementById('list_tests_wrapper').style.visibility = 'hidden';\r\n  //    e.target.style.background = 'red';\r\n  }\r\n\r\n  render() {\r\n//console.log('111 render this.state.state_test=',this.state.state_test);    \r\n//console.log('111 render global.count_questions_test=',global.count_questions_test) \r\n//console.log('111 render global.currentTest=',global.currentTest)\r\n\r\n//    if(this.state.state_edit){\r\n//      this.showTest(global.currentTest);\r\n//    }\r\n    \r\n    let work1, arr=[];\r\n    let k;     \r\n    for(let i = 1; i <= global.tests.length; i++){\r\n      work1 = \"TEST\" + i;\r\n      k = i - 1;\r\n      arr[i] = <div key={work1} id={work1} className=\"menu_test\" fontSize=\"11px\" onClick={this.showTest.bind(this,k)}>{work1}</div>\r\n    }\r\n    return (<div id=\"list_tests_wrapper\" onMouseLeave={this.noVisibilityTests}> {arr} </div>)\r\n    \r\n  }\r\n\r\n}  \r\n\r\n"]},"metadata":{},"sourceType":"module"}