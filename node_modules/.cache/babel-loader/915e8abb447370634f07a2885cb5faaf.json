{"ast":null,"code":"import _classCallCheck from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from\"react\";import{Global}from\"Global.js\";import{QuestionTest}from\"QuestionTest.js\";import{AnswerTest}from\"AnswerTest.js\";import{FooterQuestion}from\"FooterQuestion.js\";var global=Global();export var ShowCurrentTest=/*#__PURE__*/function(_React$Component){_inherits(ShowCurrentTest,_React$Component);var _super=_createSuper(ShowCurrentTest);function ShowCurrentTest(props){var _this;_classCallCheck(this,ShowCurrentTest);var arr_state_test=Array(global.count_questions_test);var arr_state_green_red=Array(global.count_questions_test);var arr_state_count_time_test=Array(global.count_questions_test).fill('00:00');var arr_state_count_time_question=Array(global.count_questions_test).fill('00:00');for(var i=0;i<global.count_questions_test;i++){arr_state_test[i]=true;arr_state_green_red[i]=[-1,-1];}arr_state_test[0]=false;_this=_super.call(this,props);_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.state={state_edit:false,state_test:arr_state_test,// arr_state_test[i] = false - i-question is active\nstate_green_red:arr_state_green_red,// [[selected, corr],[selected, corr],... ]\nstate_count_time_test:arr_state_count_time_test,// time of all test for every question\nstate_count_time_question:arr_state_count_time_question// time  for every question\n};return _this;}// constructor\n// handleChange - choosing an answer for the question  \n_createClass(ShowCurrentTest,[{key:\"handleChange\",value:function handleChange(evt){//console.log('evt=',evt);    \n//console.log('evt.par1=',evt.par1);  \n//console.log('evt.i=',evt.i);  \nif(this.state.state_test[evt.par1]===false){//      let arr_state_test_new = Array(global.count_questions_test);\n//      let arr_state_green_red_new = Array(global.count_questions_test);\nvar arr_state_test_new=this.state.state_test.slice();var arr_state_green_red_new=this.state.state_green_red.slice();var li_number=evt.par2-1;//selected answer\nglobal.current_question=evt.par1;// number of the current question\nglobal.selected_answer=li_number;//console.log('handleChange:  li_number=',li_number, '  global.current_question=', global.current_question, '  global.currentTest=',global.currentTest);  \nvar id_input=\"id\"+String(global.current_question*10+li_number);global.correct_answer=Number(global.tests[global.currentTest][global.current_question].C_A)-1;arr_state_green_red_new[global.current_question]=[li_number,global.correct_answer];//console.log('global.correct_answer=',global.correct_answer);    \n//console.log('Q=',global.tests[global.currentTest][global.current_question].Q);    \nvar id_correct=\"id\"+String(global.current_question*10+global.correct_answer);//(global.correct_answer - 1));\n//console.log('id_input=',id_input,'  id_correct=',id_correct);\nif(id_input===id_correct){global.count_correct_answer[global.current_question]=global.count_correct_answer[global.current_question]+1;}//console.log('global.count_correct_answer =',global.count_correct_answer) \nfor(var i=0;i<global.count_questions_test;i++){arr_state_test_new[i]=true;}for(var _i=0;_i<global.count_questions_test;_i++){if(_i===global.current_question){if(_i!==global.count_questions_test-1){arr_state_test_new[_i+1]=false;}}}global.current_question++;var ID_work='ID'+global.current_question+global.currentTest*100+'_time_test';var ID_next='ID'+(global.current_question+1)+global.currentTest*100+'_time_question';//console.log('global.count_time_test[global.currentTest]=',global.count_time_test[global.currentTest]);    \n// sum of all test time \nthis.startWatch4(ID_next,ID_work);// start time for 0-th question\nthis.setState({state_test:arr_state_test_new,state_edit:!this.state_edit,state_green_red:arr_state_green_red_new});}// if\n}//--- end handleChange        \n// startWatch4 -  timer of common time for the choosing question; insert in ID_TIME element\n//    ID_time_test - ID for question time\n},{key:\"startWatch4\",value:function startWatch4(ID_TIME,ID_time_test){//console.log('ID_TIME=',ID_TIME, '  global.currentTest=',global.currentTest); \n//console.log('ID_time_test=',ID_time_test, '  global.time_test=',global.time_test); \n//    if(ID_TIME.includes(\"00\")) global.current_question = 0;\n// Update the count down every 1 second\n// console.log('444 global.current_question=',global.current_question); \nvar work;//    let arr_state_count_time_test = [];\n//    let arr_state_count_time_question = [];\n//    for(let i = 0; i < global.count_questions_test; i++){\n//      arr_state_count_time_test[i] = global.count_time_test[i];\n//      arr_state_count_time_question[i] = global.count_time_question[i];\n//    }\n//console.log('555 global.current_question=',global.current_question);   \nclearInterval(global.X_setInterval);var time_work=global.current_question;//console.log('555--- time_work=',time_work);\n//global.X_setInterval = setTimeout(function(time_work) {\nvar time_work2=time_work-1;if(time_work===0)global.count_time_test[time_work]='00:00';else global.count_time_test[time_work]=global.count_time_test[time_work2];//  console.log('000   global.count_time_test[time_work]=',global.count_time_test[time_work]);  \nglobal.X_setInterval=setInterval(function(){//console.log('666 global.current_question=',global.current_question);       \n//console.log('666--- time_work=',time_work);\n//console.log('444  time_test=',time_test); \n// Get today's date and time\nvar now=new Date().getTime();//console.log('1 now ==== ', now);\t\n// Find the distance between now and the count down date\nvar distance=now-global.countDownDate_qst;//console.log('1 distance ==== ', distance);\t\n// Time calculations for days, hours, minutes and seconds\nvar minutes=Math.floor(distance%(1000*60*60)/(1000*60));var seconds=Math.floor(distance%(1000*60)/1000);// Display the result in the element with id=\"demo\"\n//  document.getElementById(ID_TIME).innerHTML = days + \"d \" + hours + \"h \"\n//  + minutes + \"m \" + seconds + \"s \";\n//console.log('1 ID_TIME ==== ', ID_TIME,  '   minutes = ' + minutes, '   seconds = ' + seconds);\t\nwork=document.getElementById(ID_TIME);if(minutes<10){minutes='0'+minutes;}if(seconds<10){seconds='0'+seconds;}global.count_time_question[time_work]=minutes+\":\"+seconds;var work_count_time_question=minutes+\":\"+seconds;//console.log('0000  time_workn=',time_work,'   global.count_time_question[global.current_question]=', global.count_time_question[time_work])      \n//console.log('minutes = '+minutes, 'seconds = '+seconds);      \n//console.log('count_time_question = '+count_time_question);  \nif(work!==null){work.innerHTML=work_count_time_question;//global.count_time_question[time_work]; \n}// If the count down is finished, write some text\nif(distance<0){clearInterval(global.X_setInterval);if(document.getElementById(ID_TIME)!==null){document.getElementById(ID_TIME).innerHTML=\"EXPIRED\";}}work=document.getElementById(ID_time_test);//console.log('444  time_test=',time_test);\n//console.log('global.count_time_question[time_work]=',global.count_time_question[time_work]); \n//      if(time_work === 0) global.count_time_test[time_work] = '00:00';\nglobal.count_time_test[time_work]=sumMinSec(global.count_time_test[time_work],'00:01');//      let work2 = sumTestTime();\n//console.log('global.count_time_test[time_work]=',global.count_time_test[time_work]);      \n//      arr_state_count_time_test[time_work] = global.count_time_test[time_work];\n//      arr_state_count_time_question[time_work] = global.count_time_question[time_work]; \n//console.log('arr_state_count_time_test[time_work]=',arr_state_count_time_test[time_work]);   \n//console.log('arr_state_count_time_question[time_work]=',arr_state_count_time_question[time_work]);      \nif(work!==null){work.innerHTML=global.count_time_test[time_work];//global.count_time_test[global.current_question];\n}// console.log('777 global.current_question=',global.current_question); \n},1000);//  });   \n//  clearInterval(global.X_setInterval);\n//console.log('888 global.current_question=',global.current_question); \n// summ minutes and seconds of all test; return -  minutes:seconds\nfunction sumMinSec(count_time_test_work,count_time_quest){var pos=-1,minutes=0,seconds=0;//console.log('1 count_time_test_work=',count_time_test_work,'  count_time_quest=',count_time_quest);\npos=count_time_quest.indexOf(':');if(pos>0){minutes=Number(count_time_quest.slice(0,pos));seconds=Number(count_time_quest.slice(pos+1));}else{minutes=0;seconds=0;}//console.log('2 count_time_test_work=',count_time_test_work,'  count_time_quest=',count_time_quest) \npos=count_time_test_work.indexOf(':');if(pos>0){minutes+=Number(count_time_test_work.slice(0,pos));seconds+=Number(count_time_test_work.slice(pos+1));}if(seconds>=60){minutes+=Math.floor(seconds/60);seconds=seconds-Math.floor(seconds/60)*60;}if(minutes<10){minutes='0'+minutes;}if(seconds<10){seconds='0'+seconds;}//console.log('minutes=',minutes,'  seconds=',seconds)\nreturn minutes+':'+seconds;}//--- end of sumMinSec\n}//---end of startWatch4\n},{key:\"render\",value:function render(){//console.log('render');    \nvar j=0;var si;var ID_time;// ID for time_test\nvar ID_time_qst;// ID for time_tests_qst\nvar ID_work;if(document.getElementById('words_wrapper')!==null)document.getElementById('words_wrapper').style.display='none';if(document.getElementById('listen_wrapper')!==null)document.getElementById('listen_wrapper').style.display='none';if(document.getElementById('phrases_wrapper')!==null)document.getElementById('phrases_wrapper').style.display='none';if(document.getElementById('jokes_wrapper')!==null)document.getElementById('jokes_wrapper').style.display='none';document.getElementById('header_menu_words').style.textDecoration='none';document.getElementById('header_menu_listen').style.textDecoration='none';document.getElementById('header_menu_phrases').style.textDecoration='none';document.getElementById('header_menu_jokes').style.textDecoration='none';document.getElementById('tests_wrapper').style.display='block';// show  TESTS\nglobal.countDownDate=new Date().getTime();// start time for the chosing test\nglobal.countDownDate_qst=new Date().getTime();// start time for the chosing question\nvar element=[];//console.log('this.state.state_edit=',this.state.state_edit);\nfor(var ii=0;ii<global.count_questions_test;ii++){// show all questions for the test\n//console.log('33333 this.props.arr_state_green_red[this.props.numberQuestion]=',this.state.state_green_red);            \n// add <div class=\"question_cont\">\nID_work='ID'+ii+global.currentTest*100+'_question_cont';//console.log('ID_work=',ID_work);      \nif(this.state.state_test[ii]){// hide all questions except 0\nelement[ii]=/*#__PURE__*/React.createElement(\"div\",{key:ID_work,id:ID_work,className:\"question_cont\",style:{opacity:\".5\"}},/*#__PURE__*/React.createElement(QuestionTest,{numberQuestion:ii}),/*#__PURE__*/React.createElement(AnswerTest,{numberQuestion:ii,arr_state_green_red_props:this.state.state_green_red,func:this.handleChange}),/*#__PURE__*/React.createElement(FooterQuestion,{numberQuestion:ii}));}else element[ii]=/*#__PURE__*/React.createElement(\"div\",{key:ID_work,id:ID_work,className:\"question_cont\"},/*#__PURE__*/React.createElement(QuestionTest,{numberQuestion:ii}),/*#__PURE__*/React.createElement(AnswerTest,{numberQuestion:ii,arr_state_green_red_props:this.state.state_green_red,func:this.handleChange}),/*#__PURE__*/React.createElement(FooterQuestion,{numberQuestion:ii}));}// for\nglobal.countDownDate_qst=new Date().getTime();// start time for the chosing question\nID_time='ID'+global.current_question+global.currentTest*100+'_time_question';ID_time_qst='ID'+global.current_question+global.currentTest*100+'_time_test';//console.log('222=========== global.current_question=',global.current_question);  \n//console.log('ID_time, global.currentTest, ID_time_qst, global.count_time_test =',ID_time, global.currentTest, ID_time_qst, global.count_time_test[global.currentTest])\nthis.startWatch4(ID_time,ID_time_qst);// start time for 0-th question     \n//console.log('333 global.current_question=',global.current_question); \nreturn element;}}]);return ShowCurrentTest;}(React.Component);//--- end of ShowCurrentTest","map":{"version":3,"sources":["/home/vik/Public/tests/src/node_modules/ShowCurrentTest.js"],"names":["React","Global","QuestionTest","AnswerTest","FooterQuestion","global","ShowCurrentTest","props","arr_state_test","Array","count_questions_test","arr_state_green_red","arr_state_count_time_test","fill","arr_state_count_time_question","i","handleChange","bind","state","state_edit","state_test","state_green_red","state_count_time_test","state_count_time_question","evt","par1","arr_state_test_new","slice","arr_state_green_red_new","li_number","par2","current_question","selected_answer","id_input","String","correct_answer","Number","tests","currentTest","C_A","id_correct","count_correct_answer","ID_work","ID_next","startWatch4","setState","ID_TIME","ID_time_test","work","clearInterval","X_setInterval","time_work","time_work2","count_time_test","setInterval","now","Date","getTime","distance","countDownDate_qst","minutes","Math","floor","seconds","document","getElementById","count_time_question","work_count_time_question","innerHTML","sumMinSec","count_time_test_work","count_time_quest","pos","indexOf","j","si","ID_time","ID_time_qst","style","display","textDecoration","countDownDate","element","ii","opacity","Component"],"mappings":"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","sourcesContent":["import React from \"react\"\r\n\r\nimport {Global} from \"Global.js\";\r\n\r\nimport {QuestionTest} from \"QuestionTest.js\";\r\n\r\nimport {AnswerTest} from \"AnswerTest.js\";\r\n\r\nimport {FooterQuestion} from \"FooterQuestion.js\";\r\n\r\nlet global = Global();\r\n\r\nexport class ShowCurrentTest extends React.Component {\r\n  constructor(props) {\r\n    let  arr_state_test = Array(global.count_questions_test);\r\n    let  arr_state_green_red = Array(global.count_questions_test);\r\n    let  arr_state_count_time_test = Array(global.count_questions_test).fill('00:00');\r\n    let  arr_state_count_time_question = Array(global.count_questions_test).fill('00:00');\r\n    for(let i=0; i<global.count_questions_test; i++) {\r\n      arr_state_test[i] = true;\r\n      arr_state_green_red[i] = [-1,-1]\r\n    }\r\n    arr_state_test[0] = false; \r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = ({state_edit: false, \r\n                  state_test: arr_state_test,  // arr_state_test[i] = false - i-question is active\r\n                  state_green_red: arr_state_green_red, // [[selected, corr],[selected, corr],... ]\r\n                  state_count_time_test: arr_state_count_time_test, // time of all test for every question\r\n                  state_count_time_question: arr_state_count_time_question // time  for every question\r\n                })\r\n  }// constructor\r\n\r\n  // handleChange - choosing an answer for the question  \r\n  handleChange(evt){\r\n    \r\n//console.log('evt=',evt);    \r\n//console.log('evt.par1=',evt.par1);  \r\n//console.log('evt.i=',evt.i);  \r\n    if(this.state.state_test[evt.par1] === false) {\r\n//      let arr_state_test_new = Array(global.count_questions_test);\r\n//      let arr_state_green_red_new = Array(global.count_questions_test);\r\n      let arr_state_test_new = this.state.state_test.slice();\r\n      let arr_state_green_red_new = this.state.state_green_red.slice();\r\n      let li_number = evt.par2 - 1; //selected answer\r\n      \r\n      global.current_question = evt.par1;    // number of the current question\r\n\r\n      global.selected_answer = li_number;\r\n//console.log('handleChange:  li_number=',li_number, '  global.current_question=', global.current_question, '  global.currentTest=',global.currentTest);  \r\n      let id_input = \"id\" + String(global.current_question*10 + li_number);\r\n      global.correct_answer = Number(global.tests[global.currentTest][global.current_question].C_A) - 1; \r\n      arr_state_green_red_new[global.current_question] = [li_number, global.correct_answer];\r\n//console.log('global.correct_answer=',global.correct_answer);    \r\n  //console.log('Q=',global.tests[global.currentTest][global.current_question].Q);    \r\n      let id_correct =  \"id\" + String(global.current_question*10 + global.correct_answer);//(global.correct_answer - 1));\r\n//console.log('id_input=',id_input,'  id_correct=',id_correct);\r\n      if(id_input === id_correct){\r\n        global.count_correct_answer[global.current_question] = global.count_correct_answer[global.current_question] + 1; \t\r\n      }\r\n//console.log('global.count_correct_answer =',global.count_correct_answer) \r\n      for(let i=0; i<global.count_questions_test; i++) {arr_state_test_new[i] = true;} \r\n      for(let i=0; i<global.count_questions_test; i++){\r\n        if(i === global.current_question){\r\n          if(i !== global.count_questions_test-1){\r\n            arr_state_test_new[i+1] = false;  \r\n          } \r\n        }\r\n\r\n      }\r\n      global.current_question++; \r\n      let ID_work = 'ID'+ global.current_question + global.currentTest*100 + '_time_test';\r\n      let ID_next = ('ID'+ (global.current_question + 1)) + global.currentTest*100 +  '_time_question';\r\n//console.log('global.count_time_test[global.currentTest]=',global.count_time_test[global.currentTest]);    \r\n\r\n      // sum of all test time \r\n\r\n\r\n      this.startWatch4(ID_next, ID_work); // start time for 0-th question\r\n      this.setState({state_test: arr_state_test_new,\r\n                    state_edit: !this.state_edit,\r\n                    state_green_red: arr_state_green_red_new\r\n      });\r\n    }// if\r\n  } //--- end handleChange        \r\n\r\n  // startWatch4 -  timer of common time for the choosing question; insert in ID_TIME element\r\n  //    ID_time_test - ID for question time\r\n  startWatch4(ID_TIME, ID_time_test) {  \r\n//console.log('ID_TIME=',ID_TIME, '  global.currentTest=',global.currentTest); \r\n//console.log('ID_time_test=',ID_time_test, '  global.time_test=',global.time_test); \r\n//    if(ID_TIME.includes(\"00\")) global.current_question = 0;\r\n  // Update the count down every 1 second\r\n // console.log('444 global.current_question=',global.current_question); \r\n    let work;\r\n//    let arr_state_count_time_test = [];\r\n//    let arr_state_count_time_question = [];\r\n//    for(let i = 0; i < global.count_questions_test; i++){\r\n//      arr_state_count_time_test[i] = global.count_time_test[i];\r\n//      arr_state_count_time_question[i] = global.count_time_question[i];\r\n//    }\r\n//console.log('555 global.current_question=',global.current_question);   \r\n    clearInterval(global.X_setInterval);\r\n\r\n    const time_work =  global.current_question;\r\n//console.log('555--- time_work=',time_work);\r\n//global.X_setInterval = setTimeout(function(time_work) {\r\n\r\n    let time_work2 = time_work - 1;\r\n    if(time_work === 0) global.count_time_test[time_work] =  '00:00'\r\n    else   global.count_time_test[time_work] = global.count_time_test[time_work2];\r\n//  console.log('000   global.count_time_test[time_work]=',global.count_time_test[time_work]);  \r\n\r\n    global.X_setInterval = setInterval(function() {\r\n//console.log('666 global.current_question=',global.current_question);       \r\n//console.log('666--- time_work=',time_work);\r\n  //console.log('444  time_test=',time_test); \r\n    // Get today's date and time\r\n      let now = new Date().getTime();\r\n  //console.log('1 now ==== ', now);\t\r\n    // Find the distance between now and the count down date\r\n      let distance = now - global.countDownDate_qst;\r\n  //console.log('1 distance ==== ', distance);\t\r\n    // Time calculations for days, hours, minutes and seconds\r\n      let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n      let seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n  \r\n    // Display the result in the element with id=\"demo\"\r\n  //  document.getElementById(ID_TIME).innerHTML = days + \"d \" + hours + \"h \"\r\n  //  + minutes + \"m \" + seconds + \"s \";\r\n  //console.log('1 ID_TIME ==== ', ID_TIME,  '   minutes = ' + minutes, '   seconds = ' + seconds);\t\r\n      work = document.getElementById(ID_TIME);\r\n      if (minutes < 10) {\r\n        minutes = '0' + minutes;\r\n      }\r\n      if (seconds < 10) {\r\n        seconds = '0' + seconds;\r\n      }\r\n      global.count_time_question[time_work] = minutes + \":\" + seconds;\r\n      let work_count_time_question = minutes + \":\" + seconds;\r\n//console.log('0000  time_workn=',time_work,'   global.count_time_question[global.current_question]=', global.count_time_question[time_work])      \r\n//console.log('minutes = '+minutes, 'seconds = '+seconds);      \r\n  //console.log('count_time_question = '+count_time_question);  \r\n  \r\n      if(work !== null) {\r\n        work.innerHTML = work_count_time_question;  //global.count_time_question[time_work]; \r\n      }\r\n  \r\n    // If the count down is finished, write some text\r\n      if (distance < 0) {\r\n        clearInterval(global.X_setInterval);\r\n        if(document.getElementById(ID_TIME) !== null) {\r\n          document.getElementById(ID_TIME).innerHTML = \"EXPIRED\";\r\n        } \r\n      }\r\n  \r\n      work = document.getElementById(ID_time_test);\r\n    \r\n//console.log('444  time_test=',time_test);\r\n//console.log('global.count_time_question[time_work]=',global.count_time_question[time_work]); \r\n\r\n//      if(time_work === 0) global.count_time_test[time_work] = '00:00';\r\n      global.count_time_test[time_work] = sumMinSec(global.count_time_test[time_work],'00:01');\r\n//      let work2 = sumTestTime();\r\n//console.log('global.count_time_test[time_work]=',global.count_time_test[time_work]);      \r\n//      arr_state_count_time_test[time_work] = global.count_time_test[time_work];\r\n//      arr_state_count_time_question[time_work] = global.count_time_question[time_work]; \r\n\r\n//console.log('arr_state_count_time_test[time_work]=',arr_state_count_time_test[time_work]);   \r\n//console.log('arr_state_count_time_question[time_work]=',arr_state_count_time_question[time_work]);      \r\n  \r\n      if(work !== null) {\r\n        work.innerHTML = global.count_time_test[time_work];  //global.count_time_test[global.current_question];\r\n      }\r\n  \r\n// console.log('777 global.current_question=',global.current_question); \r\n    }, 1000);\r\n//  });   \r\n//  clearInterval(global.X_setInterval);\r\n\r\n//console.log('888 global.current_question=',global.current_question); \r\n\r\n    // summ minutes and seconds of all test; return -  minutes:seconds\r\n    function sumMinSec(count_time_test_work, count_time_quest) {\r\n      let pos=-1, minutes=0, seconds=0;\r\n//console.log('1 count_time_test_work=',count_time_test_work,'  count_time_quest=',count_time_quest);\r\n\r\n      pos = count_time_quest.indexOf(':');\r\n      if (pos > 0) {\r\n        minutes = Number(count_time_quest.slice(0, pos));\r\n        seconds = Number(count_time_quest.slice(pos+1));\r\n      } else {\r\n        minutes = 0;\r\n        seconds = 0;\r\n      }\r\n    //console.log('2 count_time_test_work=',count_time_test_work,'  count_time_quest=',count_time_quest) \r\n   \r\n      pos = count_time_test_work.indexOf(':');\r\n      if (pos > 0) {\r\n        minutes += Number(count_time_test_work.slice(0, pos));\r\n        seconds += Number(count_time_test_work.slice(pos+1));\r\n      } \r\n    \r\n      if (seconds >= 60) {\r\n        minutes += Math.floor(seconds / 60);\r\n        seconds = seconds - (Math.floor(seconds / 60) * 60);\r\n      }\r\n\r\n      if (minutes < 10) {\r\n        minutes = '0' + minutes;\r\n      }\r\n\r\n      if (seconds < 10) {\r\n        seconds = '0' + seconds;\r\n      }\r\n//console.log('minutes=',minutes,'  seconds=',seconds)\r\n      return minutes + ':' + seconds;\r\n      \r\n    } //--- end of sumMinSec\r\n\r\n  }//---end of startWatch4\r\n   \r\n  render(){\r\n//console.log('render');    \r\n    let j = 0;\r\n    let si;\r\n    let ID_time; // ID for time_test\r\n    let ID_time_qst; // ID for time_tests_qst\r\n    let ID_work;\r\n\r\n    if(document.getElementById('words_wrapper') !== null) document.getElementById('words_wrapper').style.display = 'none';\r\n    if(document.getElementById('listen_wrapper') !== null) document.getElementById('listen_wrapper').style.display = 'none';\r\n    if(document.getElementById('phrases_wrapper') !== null) document.getElementById('phrases_wrapper').style.display = 'none';\r\n    if(document.getElementById('jokes_wrapper') !== null) document.getElementById('jokes_wrapper').style.display = 'none';\r\n    document.getElementById('header_menu_words').style.textDecoration = 'none';\r\n    document.getElementById('header_menu_listen').style.textDecoration = 'none';\r\n    document.getElementById('header_menu_phrases').style.textDecoration = 'none';\r\n    document.getElementById('header_menu_jokes').style.textDecoration = 'none';\r\n\r\n    document.getElementById('tests_wrapper').style.display = 'block';\r\n\r\n    // show  TESTS\r\n    global.countDownDate = new Date().getTime(); // start time for the chosing test\r\n    global.countDownDate_qst = new Date().getTime(); // start time for the chosing question\r\n\r\n    let element = [];\r\n//console.log('this.state.state_edit=',this.state.state_edit);\r\n\r\n    for(let ii=0; ii < global.count_questions_test; ii++) { // show all questions for the test\r\n//console.log('33333 this.props.arr_state_green_red[this.props.numberQuestion]=',this.state.state_green_red);            \r\n      // add <div class=\"question_cont\">\r\n      ID_work = 'ID'+ ii + global.currentTest*100 +  '_question_cont';  \r\n//console.log('ID_work=',ID_work);      \r\n      if (this.state.state_test[ii]) {\r\n        // hide all questions except 0\r\n        element[ii] = (\r\n        <div key={ID_work} id={ID_work} className=\"question_cont\" style={{opacity: \".5\"}}>\r\n          <QuestionTest numberQuestion={ii} />\r\n          <AnswerTest numberQuestion={ii} arr_state_green_red_props={this.state.state_green_red} func={this.handleChange} />\r\n          <FooterQuestion numberQuestion={ii} />\r\n        </div>\r\n        )\r\n      } else  element[ii] = (\r\n      <div  key={ID_work} id={ID_work} className=\"question_cont\">\r\n        <QuestionTest numberQuestion={ii} />\r\n        <AnswerTest numberQuestion={ii} arr_state_green_red_props={this.state.state_green_red} func={this.handleChange} />\r\n        <FooterQuestion numberQuestion={ii} />\r\n      </div> \r\n      )\r\n    }  // for\r\n\r\n \r\n    global.countDownDate_qst = new Date().getTime(); // start time for the chosing question\r\n\r\n    ID_time = 'ID'+ global.current_question + global.currentTest*100 + '_time_question';\r\n    ID_time_qst = 'ID'+ global.current_question + global.currentTest*100 + '_time_test';\r\n//console.log('222=========== global.current_question=',global.current_question);  \r\n//console.log('ID_time, global.currentTest, ID_time_qst, global.count_time_test =',ID_time, global.currentTest, ID_time_qst, global.count_time_test[global.currentTest])\r\n\r\n    this.startWatch4(ID_time, ID_time_qst); // start time for 0-th question     \r\n//console.log('333 global.current_question=',global.current_question); \r\n    return element;\r\n  }    \r\n} //--- end of ShowCurrentTest"]},"metadata":{},"sourceType":"module"}