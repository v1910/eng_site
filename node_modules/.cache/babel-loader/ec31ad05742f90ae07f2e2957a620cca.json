{"ast":null,"code":"import _defineProperty from\"/usr/local/lib/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _initialStore;//MainReducer.js -----------\n// state--\nvar initialStore=(_initialStore={//initialisation -----------\nwords_files:[\"SOCIETY\",\"SPORT\",\"ACCOMMODATION\",\"APPEARANCE\",\"PREPOSITIONS\",\"NATURE\"],// words files\nwords:[],// words array\nall_words:[],// array of all words\njokes_arr:[],// jokes array\nwork_arr:[],// array of random numbers\ncount_pick_button_show_word:0,//count of picking button_show_word\ncount_pick_button_show_description:0,//count of picking button_show_description\ncurrent_number_word:0,//current number word\ncurrent_number_word_group:0,// current word group (SOCIETY)\ncount_pick_button_show_answer:0,nWords:0,// quantity of words\nnTests:0,// quantity of tests\ncurrentTest:0,// current test\ncountDownDate:new Date().getTime(),// start time for the chosing test\ncountDownDate_qst:new Date().getTime(),// start time for the chosing question\ncount_time_question:[],// all time for the current question\ncount_time_test:[],// all time for the current test\ncurrent_question:0,// current question  ( 0  -  first)\nX_setInterval:0,// id of clearInterval\nidioms_files:[\"JOB\",\"HOT\",\"MIX\"],// idioms files\n/* initialize variables */count:0,clearTime:0,seconds:0,minutes:0,hours:0,clearState:0,secs:0,mins:0,gethours:0,// tests -----------------\ntests:AllTests(),// read all tests\ncAnswers:CorrectAnswersTests(),// read all correct answers\ncount_questions_test:tests[currentTest].length,// amount of questions in current test\nselected_answer:-1,// number of the selected answer in the current question\ncount_correct_answer:[]},_defineProperty(_initialStore,\"all_words\",[SOCIETYwords(),SPORTwords(),ACCOMMODATIONwords(),APPEARANCEwords(),PREPOSITIONSwords(),NATUREwords()]),_defineProperty(_initialStore,\"curent_number_word\",0),_defineProperty(_initialStore,\"nAudio\",3),_defineProperty(_initialStore,\"jokes_arr\",Jokes()),_defineProperty(_initialStore,\"nJokes\",jokes_arr.length),_defineProperty(_initialStore,\"itemMenu1\",\"\"),_defineProperty(_initialStore,\"itemMenu2\",\"\"),_initialStore);//end of initialStore-------\ninitialStore.nTests=initialStore.tests.length;// amount of all tetsts\n// Reducer\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialStore;var action=arguments.length>1?arguments[1]:undefined;/*    \n    if (cmd.type === 'ADD_PU') {\n        let id_pu = store.id_pu;  \n        let new_store;\n        new_store = store;\n        return new_store;\n    }\n  \n    if (cmd.type === 'EDIT_PU') {\n        \n        let new_store;\n        new_store = store;\n        return new_store;\n    };\n    \n    if (cmd.type === 'REMOVE_PU') {\n        let new_store;\n        store.splice(cmd.id_pu,1);\n        new_store = store;\n        return new_store;\n    }\n\n    if (cmd.type === 'SAVE_PU') {\n        console.log('createRedux: SAVE_PU cmd=',cmd);\n        let new_store = cmd.prod;\n        console.log('createRedux: SAVE_PU new_store=',new_store);\n        return new_store;\n    }\n*/return state;};//end of reducer -----------------------\n//let store = createStore(reducer);\nexport default MainReducer;","map":{"version":3,"sources":["/home/vik/Public/tests/src/MainReducer.js"],"names":["initialStore","words_files","words","all_words","jokes_arr","work_arr","count_pick_button_show_word","count_pick_button_show_description","current_number_word","current_number_word_group","count_pick_button_show_answer","nWords","nTests","currentTest","countDownDate","Date","getTime","countDownDate_qst","count_time_question","count_time_test","current_question","X_setInterval","idioms_files","count","clearTime","seconds","minutes","hours","clearState","secs","mins","gethours","tests","AllTests","cAnswers","CorrectAnswersTests","count_questions_test","length","selected_answer","count_correct_answer","SOCIETYwords","SPORTwords","ACCOMMODATIONwords","APPEARANCEwords","PREPOSITIONSwords","NATUREwords","Jokes","reducer","state","action","MainReducer"],"mappings":"oLAAA;AAEA;AACA,GAAIA,CAAAA,YAAY,iBAGf;AACCC,WAAW,CAAG,CAAC,SAAD,CAAW,OAAX,CAAmB,eAAnB,CAAoC,YAApC,CAAkD,cAAlD,CAAkE,QAAlE,CAJA,CAI6E;AAC3FC,KAAK,CAAG,EALM,CAKF;AACZC,SAAS,CAAG,EANE,CAME;AACfC,SAAS,CAAG,EAPC,CAOG;AACjBC,QAAQ,CAAG,EARG,CAQC;AACfC,2BAA2B,CAAE,CATf,CASmB;AACjCC,kCAAkC,CAAE,CAVtB,CAUyB;AACvCC,mBAAmB,CAAE,CAXP,CAWW;AACzBC,yBAAyB,CAAE,CAZb,CAYgB;AAC9BC,6BAA6B,CAAE,CAbjB,CAcdC,MAAM,CAAE,CAdM,CAcH;AACTC,MAAM,CAAE,CAfI,CAeD;AACXC,WAAW,CAAE,CAhBD,CAgBI;AAClBC,aAAa,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAjBD,CAiBuB;AACrCC,iBAAiB,CAAE,GAAIF,CAAAA,IAAJ,GAAWC,OAAX,EAlBL,CAkB2B;AACvCE,mBAAmB,CAAE,EAnBT,CAmBc;AAC1BC,eAAe,CAAE,EApBL,CAoBS;AACvBC,gBAAgB,CAAE,CArBJ,CAqBO;AACrBC,aAAa,CAAE,CAtBD,CAsBI;AAElBC,YAAY,CAAE,CAAC,KAAD,CAAO,KAAP,CAAa,KAAb,CAxBA,CAwBqB;AAEpC,0BACCC,KAAK,CAAE,CA3BO,CA4BdC,SAAS,CAAE,CA5BG,CA6BdC,OAAO,CAAE,CA7BK,CA8BdC,OAAO,CAAE,CA9BK,CA+BdC,KAAK,CAAE,CA/BO,CAgCdC,UAAU,CAAE,CAhCE,CAiCdC,IAAI,CAAE,CAjCQ,CAkCdC,IAAI,CAAE,CAlCQ,CAmCdC,QAAQ,CAAE,CAnCI,CAsCf;AACCC,KAAK,CAAEC,QAAQ,EAvCD,CAuCK;AAEnBC,QAAQ,CAAEC,mBAAmB,EAzCf,CAyCoB;AAElCC,oBAAoB,CAAGJ,KAAK,CAAEnB,WAAF,CAAL,CAAoBwB,MA3C7B,CA2CqC;AAEnDC,eAAe,CAAE,CAAC,CA7CJ,CA6CQ;AAEtBC,oBAAoB,CAAE,EA/CR,4CAmDH,CAACC,YAAY,EAAb,CAAiBC,UAAU,EAA3B,CAA+BC,kBAAkB,EAAjD,CAAqDC,eAAe,EAApE,CAAwEC,iBAAiB,EAAzF,CAA6FC,WAAW,EAAxG,CAnDG,qDAoDM,CApDN,yCAwDN,CAxDM,4CA4DHC,KAAK,EA5DF,yCA6DL1C,SAAS,CAACiC,MA7DL,4CA8DD,EA9DC,4CA+DD,EA/DC,gBAAhB,CAiEC;AAEDrC,YAAY,CAACY,MAAb,CAAuBZ,YAAY,CAACgC,KAAb,CAAmBK,MAA1C,CAAkD;AAElD;AAEA,GAAIU,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBhD,YAAyB,IAAXiD,CAAAA,MAAW,2CAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACI,MAAOD,CAAAA,KAAP,CACH,CAhCD,CAgCE;AAGF;AAEA,cAAeE,CAAAA,WAAf","sourcesContent":["//MainReducer.js -----------\n\n// state--\nlet initialStore = \n{\n    \n\t//initialisation -----------\n\t words_files:  [\"SOCIETY\",\"SPORT\",\"ACCOMMODATION\", \"APPEARANCE\", \"PREPOSITIONS\", \"NATURE\"], // words files\n\t words : [], // words array\n\t all_words : [], // array of all words\n \t jokes_arr : [], // jokes array\n\t work_arr : [], // array of random numbers\n\t count_pick_button_show_word: 0,  //count of picking button_show_word\n\t count_pick_button_show_description: 0, //count of picking button_show_description\n\t current_number_word: 0,  //current number word\n\t current_number_word_group: 0, // current word group (SOCIETY)\n\t count_pick_button_show_answer: 0,\n\t nWords: 0, // quantity of words\n  \t nTests: 0, // quantity of tests\n  \t currentTest: 0, // current test\n\t countDownDate: new Date().getTime(), // start time for the chosing test\n\t countDownDate_qst: new Date().getTime(), // start time for the chosing question\n  \t count_time_question: [],  // all time for the current question\n  \t count_time_test: [], // all time for the current test\n\t current_question: 0, // current question  ( 0  -  first)\n\t X_setInterval: 0, // id of clearInterval\n\t\n\t idioms_files: [\"JOB\",\"HOT\",\"MIX\"], // idioms files\n  \t\n\t/* initialize variables */\n\t count: 0, \n\t clearTime: 0, \n\t seconds: 0,\n\t minutes: 0,\n\t hours: 0, \n\t clearState: 0, \n\t secs: 0,\n\t mins: 0,\n\t gethours: 0, \n\n\n\t// tests -----------------\n\t tests: AllTests(), // read all tests\n\n\t cAnswers: CorrectAnswersTests(),  // read all correct answers\n\n\t count_questions_test:  tests[ currentTest].length, // amount of questions in current test\n\t\n\t selected_answer: -1,  // number of the selected answer in the current question\n\n\t count_correct_answer: [],  // amount of correct answers for earch question\n\n\t\n\t// words -----------------\n\t all_words: [SOCIETYwords(), SPORTwords(), ACCOMMODATIONwords(), APPEARANCEwords(), PREPOSITIONSwords(), NATUREwords()],\n\t curent_number_word: 0,\n\n\n\t// LISTEN-READ --------------\n\t nAudio: 3,  // amount of all audio files\n\n\n\t// jokes -----------------\n\t jokes_arr: Jokes(), // read all jokes\n\t nJokes:  jokes_arr.length, // amount of all jokes\n    itemMenu1: \"\", // TESTS, WORDS, LISTEN, PHRASES, JOKES\n    itemMenu2: \"\"  // TEST2 or SPORT or ...\n\t\n}//end of initialStore-------\n\ninitialStore.nTests =  initialStore.tests.length; // amount of all tetsts\n\n// Reducer\n\nlet reducer = (state = initialStore, action) => {\n\n/*    \n    if (cmd.type === 'ADD_PU') {\n        let id_pu = store.id_pu;  \n        let new_store;\n        new_store = store;\n        return new_store;\n    }\n  \n    if (cmd.type === 'EDIT_PU') {\n        \n        let new_store;\n        new_store = store;\n        return new_store;\n    };\n    \n    if (cmd.type === 'REMOVE_PU') {\n        let new_store;\n        store.splice(cmd.id_pu,1);\n        new_store = store;\n        return new_store;\n    }\n\n    if (cmd.type === 'SAVE_PU') {\n        console.log('createRedux: SAVE_PU cmd=',cmd);\n        let new_store = cmd.prod;\n        console.log('createRedux: SAVE_PU new_store=',new_store);\n        return new_store;\n    }\n*/     \n    return state;\n};//end of reducer -----------------------\n\n\n//let store = createStore(reducer);\n\nexport default MainReducer;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}