import React from "react"
//import ReactDOM from 'react-dom';

import {Global} from "Global.js";

let global = Global();

export class FooterQuestion extends React.Component {
  constructor(props) {
    super(props);
    let  arr_state_reply = Array(global.count_questions_test).fill('');
    let arr_state_button_close = Array(global.count_questions_test).fill('0');
  //console.log('=',arr_state_button_close)  
    this.state = ({state_reply: arr_state_reply,
                  state_button_close: arr_state_button_close
    //               state_count_correct_answer: arr_state_count_correct_answer
    })
  }

  // why - show grammer rules (n_reply - key in correct_answers_tests.js) for correct answer 
  //      ID - last div in this question = #ID0200_space_question (for first question)
  //      ID_cont - ID container
  why(n_reply, ID, ID_cont, e) {
    let arr_state_button_close_new=[];
    let arr_state_reply_new=[];
//    console.log('n_reply=',  n_reply, 'ID=', ID, 'ID_cont=',ID_cont);  
//console.log('this.state.state_reply=',this.state.state_reply)
//console.log('this.state_button_close=',this.state.state_button_close)
    for(let i = 0; i < global.count_questions_test; i++){
      arr_state_reply_new[i] = this.state.state_reply[i];
      arr_state_button_close_new[i] = this.state.state_button_close[i];
    }
//    let arr_state_button_close_new = this.state_button_close.slice(global.count_questions_test);
    arr_state_reply_new[this.props.numberQuestion] = global.cAnswers[n_reply];
    arr_state_button_close_new[this.props.numberQuestion] = '1'; //show button
    //console.log('cAnswers[n_reply]=',  cAnswers[n_reply]);
    this.setState({state_reply: arr_state_reply_new,
                   state_button_close: arr_state_button_close_new
    });

  }//---end of why
    
  answer_close(e){  // delete the answer for WHY
    let  arr_state_reply_new = [];
    let arr_state_button_close_new = [];
    
    for(let i = 0; i < global.count_questions_test; i++){
      arr_state_reply_new[i] = '';
      arr_state_button_close_new[i] = '0';
    }
//console.log('FooterQuestion: arr_state_reply_new=',arr_state_reply_new);
//console.log('FooterQuestion: arr_state_button_close_new=',arr_state_button_close_new);

    this.setState({state_reply: arr_state_reply_new,
                   state_button_close: arr_state_button_close_new
    });

  } //---end of answer_close

  render(){
//console.log('FooterQuestion: this.props.numberQuestion=',this.props.numberQuestion);
    const renderHTML = (rawHTML: string) => React.createElement("div", { dangerouslySetInnerHTML: { __html: rawHTML } });
    // button WHY
    let ID_work = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_footer_question';
    let ID_work2 = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_button_test';
    let ID_cont = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_question_cont';
    let n_reply = global.tests[global.currentTest][this.props.numberQuestion].R;
    let ID_work3 = 'ID'+ this.props.numberQuestion + global.currentTest*100 + '_space_question';
    let reply_button = '';
    let ID_work4 = 'ID'+ this.props.numberQuestion + global.currentTest*100 + '_button_answer_close';
    
    // add <div class="number_question">
    let ID_work5 = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_number_question';
    let innerHTML_work5 =  (this.props.numberQuestion + 1) + '/' + global.count_questions_test;
    let style_width_work5; 
    if(this.props.numberQuestion < 9)  style_width_work5 = {width: '26px'}
    else style_width_work5 = {width: '35px'};
//console.log('global.count_correct_answer=',global.count_correct_answer);
    // add <div class="correct_answers">
    let ID_work6 = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_correct_answers';
    let innerHTML_work6;
//console.log('global.count_questions_test=',global.count_questions_test)
//console.log('i=',i)
//console.log('this.state.state_count_correct_answer[i]=',this.state.state_count_correct_answer[i])      
//console.log('global.count_correct_answer=',global.count_correct_answer[this.props.numberQuestion],'  this.props.numberQuestion=',this.props.numberQuestion)    
    let sum_count_correct_answer = 0;
    for(let i = 0; i <= this.props.numberQuestion; i++){
      sum_count_correct_answer = sum_count_correct_answer + global.count_correct_answer[i];
    }
    let si = this.props.numberQuestion.toString();
		if(global.count_correct_answer[this.props.numberQuestion] >= 0) {
			switch (si.length) {
				case 1:
					innerHTML_work6  =  '/' + sum_count_correct_answer; 		
					break;
				case 2:
					innerHTML_work6  = '/\u00A0' + sum_count_correct_answer; 		
					break;
				case 3:
					innerHTML_work6  = '/\u00A0' + sum_count_correct_answer; 		
					break;				
				default:
					innerHTML_work6  = '/\u00A0' + sum_count_correct_answer; 		
			}
		}
    else 	innerHTML_work6  = '\u00A0';

    // add <div class="time_question">
    let ID_time_qst = 'ID'+ this.props.numberQuestion + global.currentTest*100 +  '_time_question';
    let innerHTML_work7  = global.count_time_question[this.props.numberQuestion];
//console.log('innerHTML_work7=',innerHTML_work7)
    // add <div class="time_test">
    let ID_time_work8 = 'ID'+ this.props.numberQuestion + global.currentTest*100 + '_time_test';
    
    let innerHTML_work8  = global.count_time_test[this.props.numberQuestion]; 		

    if(this.state.state_button_close[this.props.numberQuestion] === '1'){ //show button Close
      reply_button = (<div className="button_answer_close" id={ID_work4} onClick={(e) => this.answer_close(e)}>{"Close"}</div>);
    }

//console.log('n_reply=',n_reply,'  this.props.numberQuestion=',this.props.numberQuestion,'  global.currentTest=',global.currentTest);
    return (
      <>
        <div className="footer_question" id={ID_work}>
          <div className="button_test"  id={ID_work2} onClick={(e) => this.why(n_reply, ID_work2, ID_cont, e)}>{"WHY"}</div>
          <div className="number_question" id={ID_work5} style={style_width_work5}>{innerHTML_work5}</div>
          <div className="correct_answers" id={ID_work6}>{innerHTML_work6}</div>
          <div className="time_question" id={ID_time_qst}>{innerHTML_work7}</div>
          <div className="time_test" id={ID_time_work8}>{innerHTML_work8}</div>
        </div>
        <div className="space_question" id={ID_work3}>
          {renderHTML(this.state.state_reply[this.props.numberQuestion])}
          {reply_button}
        </div>
      </>
    )
  }
} //---end of FooterQuestion
