import React from "react"
//import ReactDOM from 'react-dom';

import {Global} from "Global.js";

//import {LiAnswer} from "LiAnswer.js";

let global = Global();

//AnswerTest -  add <ui class="answer_test"> 
export class AnswerTest extends React.Component {
  constructor(props) {
    super(props);
//    this.state = {value_backGr: false};
  }
  
  yellowVisibility(par,e) { // onMouseEnter
//console.log('111 yellowVisibility:  par.backgroundColor=',par.backgroundColor);              
    switch (par.backgroundColor) {

      case "green": 
//console.log("green");             
        e.target.style.background = 'green';
      break;
      case "rgba(255,192,171,0.5)": 
        e.target.style.background = "rgba(255,192,171,0.5)";
//console.log("red");                       
      break;
      default:
//console.log("default");                       
        e.target.style.background = 'yellow';
    }

  } //--- end of  yellowVisibility

  greyVisibility(par,e) {  // onMouseLeave
//console.log('greyVisibility:  par.backgroundColor=',par.backgroundColor);  
    switch (par.backgroundColor) {

      case "green": 
//console.log("green");       
        e.target.style.background = 'green';
      break;
      case "rgba(255,192,171,0.5)": 
//console.log("red");             
        e.target.style.background = "rgba(255,192,171,0.5)";
      break;
      default:
//console.log("default");               
        e.target.style.background = "rgba(255,255,255,0.5)";
    }

}  //--- end of greyVisibility

    render() {
//    let work_li=[];
    let arr_val = global.tests[global.currentTest][this.props.numberQuestion];
    global.current_question = this.props.numberQuestion;
//console.log('AnswerTest:  this.props.numberQuestion=',this.props.numberQuestion)
//console.log('AnswerTest:  global.currentTest=',global.currentTest)
//console.log('AnswerTest:  global.current_question=',global.current_question)

    let ID_li=[];
//    let par=[];
    let par1;    
    let j;
    let li_text=[];
    let counter = 0; // count of rows in the current question
    let li_key;
    let li_style=[];
    for (let key in arr_val) {
      counter++; 
    }
    par1 = this.props.numberQuestion; // number of the Question
//console.log('AnswerTest:  counter=',counter);
    for(let i=3; i < counter; i++){
      j = i - 3;
      global.selected_answer = j; //selected answer
//      par2[j] = j; //selected answer

//console.log('111 AnswerTest answ par2=',par2)      
      ID_li[j] = "id" + (this.props.numberQuestion*10 + j);
      li_key = "A" + (i-2);
      li_text[j] = arr_val[li_key];
//console.log('AnswerTest global.selected_answer=',global.selected_answer);
//console.log('AnswerTest global.current_question=',global.current_question);
//console.log('AnswerTest this.props.numberQuestion=',this.props.numberQuestion);
      li_style[j] = {backgroundColor:  "rgba(255,255,255,0.5)"}; //grey
//console.log('this.props.arr_state_green_red_props[this.props.numberQuestion]=',this.props.arr_state_green_red_props);      
      
      if(this.props.arr_state_green_red_props[this.props.numberQuestion][1] === j){
        li_style[j] = {backgroundColor:  "green"};
      }         
      if((this.props.arr_state_green_red_props[this.props.numberQuestion][0] === j) && 
        (this.props.arr_state_green_red_props[this.props.numberQuestion][0] !== 
          this.props.arr_state_green_red_props[this.props.numberQuestion][1])){      
          li_style[j] = {backgroundColor:  "rgba(255,192,171,0.5)"};
      }


    } // for   
      
//console.log('ID_li=',ID_li);
//console.log('li_style=',li_style);
//console.log('li_text=',li_text);

    switch (counter) {

      case 4: 
        return (
            <li key={ID_li[0]} id={ID_li[0]} className="li_class"   onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
            );
      case 5: 
      return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class" onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class" onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
        </>   
      )
      case 6: 
        return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]}  onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
          <li key={ID_li[2]} id={ID_li[2]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[2],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[2],e)} style={li_style[2]} onClick={(evt) => this.props.func({par1: par1, par2: 3})}>{li_text[2]}</li>
        </>
        )
        case 7: 
        return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
          <li key={ID_li[2]} id={ID_li[2]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[2],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[2],e)} style={li_style[2]} onClick={(evt) => this.props.func({par1: par1, par2: 3})}>{li_text[2]}</li>
          <li key={ID_li[3]} id={ID_li[3]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[3],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[3],e)} style={li_style[3]} onClick={(evt) => this.props.func({par1: par1, par2: 4})}>{li_text[3]}</li>
        </>
        )
        case 8: 
        return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
          <li key={ID_li[2]} id={ID_li[2]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[2],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[2],e)} style={li_style[2]} onClick={(evt) => this.props.func({par1: par1, par2: 3})}>{li_text[2]}</li>
          <li key={ID_li[3]} id={ID_li[3]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[3],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[3],e)} style={li_style[3]} onClick={(evt) => this.props.func({par1: par1, par2: 4})}>{li_text[3]}</li>
          <li key={ID_li[4]} id={ID_li[4]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[4],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[4],e)} style={li_style[4]} onClick={(evt) => this.props.func({par1: par1, par2: 5})}>{li_text[4]}</li>
        </>
        )                
        case 9: 
        return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
          <li key={ID_li[2]} id={ID_li[2]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[2],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[2],e)} style={li_style[2]} onClick={(evt) => this.props.func({par1: par1, par2: 3})}>{li_text[2]}</li>
          <li key={ID_li[3]} id={ID_li[3]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[3],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[3],e)} style={li_style[3]} onClick={(evt) => this.props.func({par1: par1, par2: 4})}>{li_text[3]}</li>
          <li key={ID_li[4]} id={ID_li[4]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[4],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[4],e)} style={li_style[4]} onClick={(evt) => this.props.func({par1: par1, par2: 5})}>{li_text[4]}</li>
          <li key={ID_li[5]} id={ID_li[5]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[5],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[5],e)} style={li_style[5]} onClick={(evt) => this.props.func({par1: par1, par2: 6})}>{li_text[5]}</li>          
        </>
        )       
        case 10: 
        return (
        <>
          <li key={ID_li[0]} id={ID_li[0]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[0],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[0],e)} style={li_style[0]} onClick={(evt) => this.props.func({par1: par1, par2: 1})}>{li_text[0]}</li>
          <li key={ID_li[1]} id={ID_li[1]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[1],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[1],e)} style={li_style[1]} onClick={(evt) => this.props.func({par1: par1, par2: 2})}>{li_text[1]}</li>
          <li key={ID_li[2]} id={ID_li[2]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[2],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[2],e)} style={li_style[2]} onClick={(evt) => this.props.func({par1: par1, par2: 3})}>{li_text[2]}</li>
          <li key={ID_li[3]} id={ID_li[3]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[3],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[3],e)} style={li_style[3]} onClick={(evt) => this.props.func({par1: par1, par2: 4})}>{li_text[3]}</li>
          <li key={ID_li[4]} id={ID_li[4]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[4],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[4],e)} style={li_style[4]} onClick={(evt) => this.props.func({par1: par1, par2: 5})}>{li_text[4]}</li>
          <li key={ID_li[5]} id={ID_li[5]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[5],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[5],e)} style={li_style[5]} onClick={(evt) => this.props.func({par1: par1, par2: 6})}>{li_text[5]}</li>          
          <li key={ID_li[6]} id={ID_li[6]} className="li_class"  onMouseEnter={(e) => this.yellowVisibility(li_style[6],e)}  onMouseLeave={(e) => this.greyVisibility(li_style[6],e)} style={li_style[6]} onClick={(evt) => this.props.func({par1: par1, par2: 7})}>{li_text[6]}</li>                    
        </>
        )                       
      default:
        return (<li key={ID_li[0]} id={ID_li[0]} className="li_class"    style={li_style[0]}
                onClick={(evt) => this.props.func({par1: par1, par2: 0})}>{li_text[0]}</li>
                )
    } // swtch
    
//    return (<div className="answer_test">{work_li}</div>)
  }
} // --- end of AnswerTest

//style = 'background-color:yellow;'