{"version":3,"sources":["App.js","MainReducer.js","index.js"],"names":["App","HeaderBgrTest","id","FooterSite","initialStore","words_files","words","all_words","jokes_arr","work_arr","count_pick_button_show_word","count_pick_button_show_description","current_number_word","current_number_word_group","count_pick_button_show_answer","nWords","nTests","currentTest","countDownDate","Date","getTime","countDownDate_qst","count_time_question","count_time_test","current_question","X_setInterval","idioms_files","count","clearTime","seconds","minutes","hours","clearState","secs","mins","gethours","tests","cAnswers","count_questions_test","selected_answer","count_correct_answer","length","MainReducer","state","type","document","getElementById","style","visibility","visible_tests","visible_words","visible_listen","visible_phrases","visible_jokes","store","createStore","ReactDOM","render"],"mappings":"kNAiCeA,I,EAAAA,EAdf,WAEI,OACE,oCACE,kBAACC,EAAA,EAAD,MACA,6BAASC,GAAG,kBACZ,6BAASA,GAAG,kBACZ,6BAASA,GAAG,mBACZ,6BAASA,GAAG,oBACZ,6BAASA,GAAG,kBACZ,kBAACC,EAAA,EAAD,Q,8BC1BJC,GAAY,GAIdC,YAAc,CAAC,UAAU,QAAQ,gBAAiB,aAAc,eAAgB,UAChFC,MAAQ,GACRC,UAAY,GACXC,UAAY,GACbC,SAAW,GACXC,4BAA6B,EAC7BC,mCAAoC,EACpCC,oBAAqB,EACrBC,0BAA2B,EAC3BC,8BAA+B,EAC/BC,OAAQ,EACNC,OAAQ,EACRC,YAAa,EACfC,eAAe,IAAIC,MAAOC,UAC1BC,mBAAmB,IAAIF,MAAOC,UAC5BE,oBAAqB,GACrBC,gBAAiB,GACnBC,iBAAkB,EAClBC,cAAe,EAEfC,aAAc,CAAC,MAAM,MAAM,OAG3BC,MAAO,EACPC,UAAW,EACXC,QAAS,EACTC,QAAS,EACTC,MAAO,EACPC,WAAY,EACZC,KAAM,EACNC,KAAM,EACNC,SAAU,EAKXC,MAAQ,WAERC,SAAW,sBAEXC,qBAAuB,EAEvBC,iBAAkB,EAElBC,qBAAsB,IAhDP,0BAoDJ,CAAC,eAAgB,aAAc,qBAAsB,kBAAmB,oBAAqB,gBApDzF,mCAqDK,GArDL,uBAyDP,GAzDO,0BA6DJ,SA7DI,uBA8DNhC,UAAUiC,QA9DJ,0BAkED,IAlEC,0BAmED,IAnEC,8BAoEA,UApEA,8BAqEA,UArEA,+BAsEC,UAtED,gCAuEE,UAvEF,8BAwEA,UAxEA,GAwIDC,MAvDf,WAAoD,IAA/BC,EAA8B,uDAAtBvC,EAE5B,OAAOuC,EAAMC,MACZ,IAAK,kBAMJ,OALAC,SAASC,eAAe,sBAAsBC,MAAMC,WAAa,SACjEH,SAASC,eAAe,uBAAuBC,MAAMC,WAAa,SAClEH,SAASC,eAAe,wBAAwBC,MAAMC,WAAa,SACnEH,SAASC,eAAe,sBAAsBC,MAAMC,WAAa,SAC9DH,SAASC,eAAe,sBAAsBC,MAAMC,WAAa,UACpE,2BACIL,GADJ,IAECM,cAAe,UACfC,cAAe,SACfC,eAAgB,SAChBC,gBAAiB,SACjBC,cAAe,WAEhB,QACC,OAAOV,IC9FLW,EAAQC,YAAYb,GAE1Bc,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFT,SAASC,eAAe,W","file":"static/js/main.28ddf2f5.chunk.js","sourcesContent":["import React from 'react';\n//import { connect } from 'react-redux';\nimport './App.css';\n\n//import {Global} from 'Global.js';\n\nimport {HeaderBgrTest} from \"HeaderBgrTest.js\";\n\nimport {FooterSite} from 'FooterSite.js';\n\n//import {TestWrapper} from 'TestWrapper.js';\n\n//import {GlobVar, global} from 'Global.js';\n\n//let global = Global();\n\n//let GlobVar = React.createContext({global});\n\n\nfunction App() {\n\n    return (\n      <>\n        <HeaderBgrTest />\n        <section id=\"tests_wrapper\"></section>\n        <section id=\"words_wrapper\"></section>\n        <section id=\"listen_wrapper\"></section>\n        <section id=\"phrases_wrapper\"></section>\n        <section id=\"jokes_wrapper\"></section>\n        <FooterSite />\n      </>\n    )\n}\nexport default App;\n\n\n  ","//MainReducer.js -----------\n\n// state--\nlet initialStore = \n{\n    \n\t//initialisation -----------\n\t words_files:  [\"SOCIETY\",\"SPORT\",\"ACCOMMODATION\", \"APPEARANCE\", \"PREPOSITIONS\", \"NATURE\"], // words files\n\t words : [], // words array\n\t all_words : [], // array of all words\n \t jokes_arr : [], // jokes array\n\t work_arr : [], // array of random numbers\n\t count_pick_button_show_word: 0,  //count of picking button_show_word\n\t count_pick_button_show_description: 0, //count of picking button_show_description\n\t current_number_word: 0,  //current number word\n\t current_number_word_group: 0, // current word group (SOCIETY)\n\t count_pick_button_show_answer: 0,\n\t nWords: 0, // quantity of words\n  \t nTests: 0, // quantity of tests\n  \t currentTest: 0, // current test\n\t countDownDate: new Date().getTime(), // start time for the chosing test\n\t countDownDate_qst: new Date().getTime(), // start time for the chosing question\n  \t count_time_question: [],  // all time for the current question\n  \t count_time_test: [], // all time for the current test\n\t current_question: 0, // current question  ( 0  -  first)\n\t X_setInterval: 0, // id of clearInterval\n\t\n\t idioms_files: [\"JOB\",\"HOT\",\"MIX\"], // idioms files\n  \t\n\t/* initialize variables */\n\t count: 0, \n\t clearTime: 0, \n\t seconds: 0,\n\t minutes: 0,\n\t hours: 0, \n\t clearState: 0, \n\t secs: 0,\n\t mins: 0,\n\t gethours: 0, \n\n\n\t// tests -----------------\n\n\ttests:  \"AllTests\", // read all tests\n\n\tcAnswers:  \"CorrectAnswersTests\",  // read all correct answers\n\n\tcount_questions_test:  0, // amount of questions in current test\n\t\n\tselected_answer: -1,  // number of the selected answer in the current question\n\n\tcount_correct_answer: [],  // amount of correct answers for earch question\n\n\t\n\t// words -----------------\n\tall_words: [\"SOCIETYwords\", \"SPORTwords\", \"ACCOMMODATIONwords\", \"APPEARANCEwords\", \"PREPOSITIONSwords\", \"NATUREwords\"],\n\tcurent_number_word: 0,\n\n\n\t// LISTEN-READ --------------\n\tnAudio: 3,  // amount of all audio files\n\n\n\t// jokes -----------------\n\tjokes_arr: \"Jokes\", // read all jokes\n\tnJokes:  jokes_arr.length, // amount of all jokes\n\n\n\t// menu\n    itemMenu1: \"\", // TESTS, WORDS, LISTEN, PHRASES, JOKES\n    itemMenu2: \"\",  // TEST2 or SPORT or ...\n\tvisible_tests: 'hidden',\n\tvisible_words: 'hidden',\n\tvisible_listen: 'hidden',\n\tvisible_phrases: 'hidden',\n\tvisible_jokes: 'hidden'\n\t\n}//end of initialStore-------\n\n\n\n\n// Reducer\n\nfunction MainReducer(state = initialStore, action) {\n\n\tswitch(state.type){\n\t\tcase 'SHOW_TESTS_MENU':\n\t\t\tdocument.getElementById('list_words_wrapper').style.visibility = 'hidden';\n\t\t\tdocument.getElementById('list_listen_wrapper').style.visibility = 'hidden';\n\t\t\tdocument.getElementById('list_phrases_wrapper').style.visibility = 'hidden';\n\t\t\tdocument.getElementById('list_jokes_wrapper').style.visibility = 'hidden';\n\t\t    document.getElementById('list_tests_wrapper').style.visibility = 'visible';\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tvisible_tests: 'visible',\n\t\t\t\tvisible_words: 'hidden',\n\t\t\t\tvisible_listen: 'hidden',\n\t\t\t\tvisible_phrases: 'hidden',\n\t\t\t\tvisible_jokes: 'hidden'\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t}\n\n/*    \n    if (cmd.type === 'ADD_PU') {\n        let id_pu = store.id_pu;  \n        let new_store;\n        new_store = store;\n        return new_store;\n    }\n  \n    if (cmd.type === 'EDIT_PU') {\n        \n        let new_store;\n        new_store = store;\n        return new_store;\n    };\n    \n    if (cmd.type === 'REMOVE_PU') {\n        let new_store;\n        store.splice(cmd.id_pu,1);\n        new_store = store;\n        return new_store;\n    }\n\n    if (cmd.type === 'SAVE_PU') {\n        console.log('createRedux: SAVE_PU cmd=',cmd);\n        let new_store = cmd.prod;\n        console.log('createRedux: SAVE_PU new_store=',new_store);\n        return new_store;\n    }\n*/     \n};//end of MainReducer -----------------------\n\n\n//let store = createStore(reducer);\n\nexport default MainReducer;\n\n\n\n\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport MainReducer from './MainReducer';\r\n\r\nconst store = createStore(MainReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}